-- STUDENT, ENROL, SUBJECT 
-- 1. 성이 '김'씨인 학생들의 학번, 이름, 학과를 출력하시오.
SELECT STU_NO , STU_NAME,STU_DEPT
FROM STUDENT
WHERE STU_NAME LIKE ('%김%');

-- 2. 15학번 학생들의 학번, 이름, 학과를 출력하시오.
SELECT STU_NO , STU_NAME,STU_DEPT
FROM STUDENT
WHERE SUBSTR(STU_NO,3,2) = 15;

-- 3. 컴퓨터정보 학과 학생들의 시험 평균 점수를 구하시오.

SELECT AVG(ENR_GRADE)
FROM STUDENT S
INNER JOIN ENROL E ON S.STU_NO = E.STU_NO
WHERE STU_DEPT = '컴퓨터정보'
;

-- 4. 컴퓨터개론 수업을 듣는 학생의 학번, 이름, 학과, 시험점수를 구하시오.

SELECT S.STU_NAME , S.STU_NO , SUB_DEPT , ENR_GRADE
FROM STUDENT S 
INNER JOIN SUBJECT SUB ON S.STU_GRADE = SUB.SUB_GRADE
INNER JOIN ENROL E ON S.STU_NO = E.STU_NO
WHERE SUB_NAME = '컴퓨터개론';

-- 5. 학생들의 전체 평균 키보다 큰 키를 가진 학생들의 학번, 이름, 키를 출력하시오.

SELECT AVG(STU_HEIGHT)
FROM STUDENT
;

SELECT STU_NO,STU_NAME ,STU_HEIGHT
FROM STUDENT S
WHERE
STU_HEIGHT>(
SELECT AVG(STU_HEIGHT)
FROM STUDENT 
);

-- 6. 본인 학과의 평균 키보다 큰 학생들의 이름, 학과, 키, 학과 평균키 값 출력

SELECT AVG(STU_HEIGHT) ,STU_DEPT
FROM STUDENT S 
GROUP BY STU_DEPT
;

SELECT STU_NAME , S.STU_DEPT , S.STU_HEIGHT , AVG_HEIGHT
FROM STUDENT S 
INNER JOIN(
SELECT AVG(STU_HEIGHT) AVG_HEIGHT ,STU_DEPT
FROM STUDENT  
GROUP BY STU_DEPT
)S2 ON S.STU_DEPT = S2.STU_DEPT
WHERE S.STU_HEIGHT>AVG_HEIGHT;

-- EMP, SALGRADE, DEPT

-- 1. 급여 등급이 3이상인 사원의 사번, 이름, 급여등급을 출력하시오.
SELECT  EMPNO , ENAME , GRADE
FROM EMP E
INNER JOIN SALGRADE S ON E.SAL BETWEEN LOSAL AND HISAL
WHERE GRADE > 3
;

-- 2. 사번, 이름, 팀장(MGR)의 이름을 출력하시오.

SELECT E1.EMPNO , E1.ENAME , E2.ENAME 
FROM EMP E1
INNER JOIN EMP E2 ON E1.EMPNO = E2.MGR;

-- 3. 부서별 가장 높은 급여를 받는 사원의 사번, 이름, 급여, 부서명을 출력하시오.
SELECT * FROM EMP;

SELECT EMPNO , ENAME , SAL, JOB
FROM EMP E1
INNER JOIN (
SELECT MAX(SAL) MAX_SAL ,DEPTNO
FROM EMP 
GROUP BY DEPTNO
) E2 ON E1.DEPTNO = E2.DEPTNO
WHERE SAL =MAX_SAL
;

-- 4. 입사년도가 1981년도인 사원들의 급여 총합을 구하시오.

SELECT * FROM EMP;

SELECT SUM(SAL)
FROM EMP
WHERE TO_CHAR(HIREDATE,'YYYY') = 1981;

-- STU, PROFESSOR, DEPARTMENT
-- 1. 남자이면서(주민번호 7번째자리 1) 공과대학에 속한 학생의 수를 구하시오.

SELECT *
FROM STU S
INNER JOIN DEPARTMENT D ON S.DEPTNO1 = D.DEPTNO
WHERE SUBSTR(JUMIN , 7,1) = 1 AND DNAME LIKE ('%공학과%');

-- 2. 학생들의 아이디의 마지막 세글자를 '*' 로 채우시오
SELECT * FROM STU;

SELECT RPAD (SUBSTR(ID , 0,LENGTH(ID)-3),LENGTH(ID),'*')
FROM STU;

-- 3. 보너스+급여가 400 이하인 교수들의 이름, 아이디, 학과명을 출력하시오.
SELECT NAME , ID ,D.DNAME
FROM PROFESSOR P
INNER JOIN DEPARTMENT D ON P.DEPTNO = D.DEPTNO
WHERE PAY+NVL(BONUS,0) < 400 ;

-- 4. 담당 학생이 2명이상인 교수의 이름, 아이디, 담당학생 수를 출력하시오.

SELECT P.NAME , P.ID,COUNT(*)
FROM PROFESSOR P
INNER JOIN STU S ON P.PROFNO = S.PROFNO
GROUP BY P.ID,P.NAME
HAVING COUNT (*) >= 2;

-- 5. 가장 높은 급여를 받는 교수의 학과에 해당하는 학생 수 출력

SELECT DEPTN
FROM PROFESSOR
WHERE PAY=(SELECT MAX(PAY) FROM PROFESSOR);

SELECT  COUNT(*)
FROM STU
WHERE DEPTNO1=(
SELECT DEPTNO
FROM PROFESSOR
WHERE PAY=(SELECT MAX(PAY) FROM PROFESSOR));


--1.allen과 같은 job, DEPTNO(부서) 를 가진 사람을 구하시오.(ENAME,DNAME)출력
--(ALLSEN은 출력하지말것)
--(EMP,DEPT)

SELECT *
FROM EMP
WHERE JOB = 'SALESMAN' AND DEPTNO = '30';

